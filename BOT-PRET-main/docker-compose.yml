version: '3.8'

services:
  bot:
    build: .
    container_name: discord-bot
    restart: unless-stopped
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://discord_bot:${PGPASSWORD:-changeme}@postgres:5432/discord_bot
      - PGHOST=postgres
      - PGPORT=5432
      - PGDATABASE=discord_bot
      - PGUSER=discord_bot
      - PGPASSWORD=${PGPASSWORD:-changeme}
      - PGSSL=false
      - REDIS_URL=redis://redis:6379
      - NODE_ENV=${NODE_ENV:-production}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "${PORT:-3000}:3000"
    volumes:
      - ./logs:/app/logs:rw
    networks:
      - bot-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:16-alpine
    container_name: discord-bot-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: discord_bot
      POSTGRES_PASSWORD: ${PGPASSWORD:-changeme}
      POSTGRES_DB: discord_bot
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=en_US.utf8 --lc-ctype=en_US.utf8"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d:ro
    ports:
      - "${PGPORT:-5432}:5432"
    networks:
      - bot-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U discord_bot -d discord_bot"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7-alpine
    container_name: discord-bot-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    networks:
      - bot-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local

networks:
  bot-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
